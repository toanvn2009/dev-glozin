{%- liquid
  assign theme_st = settings
  assign section_st = section.settings
  assign scroll_animation = theme_st.scroll_animation
  if section_st.section_width == 'fix_width'
    assign section_width = 'container'
  elsif section_st.section_width == 'full_width'
    assign section_width = 'full-width'
  else
    assign section_width = 'fluid_container'
  endif

  assign text = section_st.text
  assign text_size = section_st.text_size

  assign text_content_size = ''
  if text_size == 'small'
    assign text_content_size = 'h7'
  elsif text_size == 'large'
    assign text_content_size = 'h4'
  else
    assign text_content_size = 'h6'
  endif

  assign column_gap_slide = 'gap-0'
  if section_st.column_gap == 'large'
    assign column_gap_slide = 'gap-32 gap-md-52'
  elsif section_st.column_gap == 'medium'
    assign column_gap_slide = 'gap-20 gap-md-32'
  elsif section_st.column_gap == 'small'
    assign column_gap_slide = 'gap-sp-2 gap-md-sp-4'
  endif
-%}
{%- capture style -%}
    --section-pt: {{ section_st.padding_top }}; --section-pb: {{ section_st.padding_bottom }};--max-width: {{ section_st.content_max_width }}%;
{%- endcapture -%}
<div
  class="section section-case color-{{ section_st.color_scheme }} gradient{% if section_st.show_divider %} border-top{% endif %}"
  style="{{ style | strip | strip_newlines }}"
>
  <div class="{{ section_width }} flex column content-center">
    <div class="content-center {{ column_gap_slide }} flex mb-sp-8">
      {%- for block in section.blocks -%}
        {%- liquid
          assign block_st = block.settings
          assign media_type = section_st.media_type
          assign media = block_st.image
          assign video = block_st.video
          assign image_alt = media.alt
          assign media_type_block = block_st.media_type
          if image_alt == blank
            assign image_alt_translate = 'media-with-text.image.default' | t
            assign image_alt = image_alt_translate | append: ' ' | append: forloop.index
          endif
          assign middle_index = section.blocks.size | divided_by: 2 | floor
          assign is_middle = false
          if forloop.index0 == middle_index
            assign is_middle = true
          endif

          if is_middle
            assign active_class = 'active'
          else
            assign active_class = ''
          endif
          assign image_ratio = section_st.image_ratio

          assign ratio = '3/4'
          if media_type != 'rounded'
            if image_ratio != 'adapt'
              case image_ratio
                when 'square'
                  assign ratio = '1/1'
                when 'landscape'
                  assign ratio = '4/3'
                when 'portrait'
                  assign ratio = '3/4'
              endcase
            else
              if video != blank and media_type_block == 'video'
                assign ratio = video.aspect_ratio
              elsif media != blank and media_type_block == 'image'
                assign ratio = media.aspect_ratio
              else
                assign ratio = '3/4'
              endif
            endif
          else
            assign ratio = '1/1'
            assign media_type = 'rounded-50'
          endif
        -%}
        <div class="multimedia_with_text__block {{ active_class }}" {{ block.shopify_attributes }}>
          <div
            class="multimedia_with_text__media {{ media_type }} rounded video-section"
            style="--aspect-ratio: {{ ratio }};{% if section_st.media_type == 'oval' %}--img-rounded: 100px;{% endif %}"
          >
            {%- if media_type_block == 'video' -%}
              {%- liquid
                assign source = video.sources
                assign source_url = ''
                for s in source
                  if s.format == 'mp4'
                    assign source_url = s.url
                    break
                  endif
                endfor
                assign video_poster = video.preview_image | image_url: width: 1100
                assign video_alt = block_st.video_alt_text
                if video_alt != blank
                  assign video_alt = video_alt | escape
                else
                  assign video_alt = video.alt | escape
                else
                  assign video_alt = 'accessibility.video' | t
                endif
              -%}
              {% if video != blank %}
                <video-local-scroll style="--aspect-ratio: {{ ratio }};" class="absolute">
                  <div class="video-thumbnail absolute" style="--aspect-ratio: {{ ratio }}">
                    {% render 'responsive-image',
                      type: 'banner',
                      container: section_st.section_width,
                      image: video_poster,
                      image_alt: image_alt,
                      padding: column_gap_slide,
                      column: section.blocks.size,
                      motion: true
                    %}
                  </div>
                  <template>
                    <video
                      loop
                      src="{{ source_url }}"
                      poster="{{ video_poster }}"
                      playsinline
                      autoplay
                      muted
                      title="{{ video_alt }}"
                    ></video>
                  </template>
                </video-local-scroll>
              {% else %}
                {% render 'placeholder-render', type: 'blog' %}
              {% endif %}
            {%- else -%}
              {%- if media != blank -%}
                {% render 'responsive-image',
                  type: 'banner',
                  container: section_st.section_width,
                  image: media,
                  image_alt: image_alt,
                  padding: column_gap_slide,
                  column: section.blocks.size,
                  motion: true
                %}
              {%- else -%}
                {% render 'placeholder-render', type: 'blog' %}
              {%- endif -%}
            {%- endif -%}
          </div>
        </div>
      {%- endfor -%}
    </div>
    {% if text != blank %}
      <div class="multimedia_with_text__text text-center max-w-custom">
        {% if scroll_animation != 'disable' %}
          <motion-effect
            data-animate="fade-up"
            data-animate-delay="30"
            class="block"
          >
        {% endif %}
        <div class="text-content {{ text_content_size }} prose">
          {{ section.settings.text }}
        </div>
        {% if scroll_animation != 'disable' %}
          </motion-effect>
        {% endif %}
      </div>
    {% endif %}
  </div>
</div>
{% schema %}
{
  "name": "t:sections.multimedia_with_text.name",
  "tag": "section",
  "class": "section section-multimedia_with_text",
  "disabled_on": {
    "groups": ["header", "footer", "custom.overlay"]
  },
  "max_blocks": 3,
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.multimedia_with_text.how_to_use"
    },
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "fix_width",
          "label": "t:sections.all.layout.fix_width"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.layout.stretch_width"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.layout.full_width"
        }
      ],
      "default": "fix_width",
      "label": "t:sections.all.layout.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.info",
      "default": "default-color-scheme"
    },
    {
      "type": "header",
      "content": "t:sections.all.content_header.label"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "t:sections.all.text.label",
      "default": "<p>Add a short description for this section.</p>"
    },
    {
      "type": "select",
      "id": "text_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.all.content_header.heading_size.options__7.label"
        },
        {
          "value": "medium",
          "label": "t:sections.all.content_header.heading_size.options__6.label"
        },
        {
          "value": "large",
          "label": "t:sections.all.content_header.heading_size.options__4.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.scrolling_text.settings.text_size.label"
    },
    {
      "type": "range",
      "id": "content_max_width",
      "min": 40,
      "max": 100,
      "unit": "%",
      "default": 70,
      "label": "t:sections.rich-text.settings.max_width.label",
      "info": "t:sections.rich-text.settings.max_width.info"
    },
    {
      "type": "header",
      "content": "t:sections.multimedia_with_text.blocks.settings.header"
    },
    {
      "type": "select",
      "id": "media_type",
      "options": [
        {
          "value": "default",
          "label": "t:sections.multimedia_with_text.blocks.settings.media_style.options__3.label"
        },
        {
          "value": "rounded",
          "label": "t:sections.multimedia_with_text.blocks.settings.media_style.options__1.label"
        },
        {
          "value": "oval",
          "label": "t:sections.multimedia_with_text.blocks.settings.media_style.options__2.label"
        }
      ],
      "default": "oval",
      "label": "t:sections.multimedia_with_text.blocks.settings.media_style.label"
    },
    {
      "type": "select",
      "id": "column_gap",
      "options": [
        {
          "value": "no_gap",
          "label": "t:sections.all.padding.column_gap.no_gap"
        },
        {
          "value": "small",
          "label": "t:sections.all.padding.column_gap.small"
        },
        {
          "value": "medium",
          "label": "t:sections.all.padding.column_gap.medium"
        },
        {
          "value": "large",
          "label": "t:sections.all.padding.column_gap.large"
        }
      ],
      "default": "medium",
      "label": "t:sections.all.padding.column_gap.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.all.image.aspect_ratio.adapt"
        },
        {
          "value": "square",
          "label": "t:sections.all.image.aspect_ratio.options__1"
        },
        {
          "value": "portrait",
          "label": "t:sections.all.image.aspect_ratio.options__2"
        },
        {
          "value": "landscape",
          "label": "t:sections.all.image.aspect_ratio.options__3"
        }
      ],
      "default": "adapt",
      "label": "t:sections.all.image.aspect_ratio.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 48
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 48
    },
    {
      "type": "header",
      "content": "t:sections.all.divider.section_divider_heading"
    },
    {
      "type": "checkbox",
      "id": "show_divider",
      "label": "t:sections.all.divider.show_divider",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "media",
      "name": "t:sections.multimedia_with_text.blocks.name",
      "settings": [
        {
          "type": "select",
          "id": "media_type",
          "options": [
            {
              "value": "image",
              "label": "t:sections.all.image.label"
            },
            {
              "value": "video",
              "label": "t:sections.all.video.label"
            }
          ],
          "default": "image",
          "label": "t:sections.all.media.label"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.all.image.label",
          "visible_if": "{{ block.settings.media_type == 'image' }}"
        },
        {
          "type": "video",
          "id": "video",
          "label": "t:sections.all.video.label",
          "visible_if": "{{ block.settings.media_type == 'video' }}"
        },
        {
          "type": "text",
          "id": "video_alt_text",
          "label": "t:sections.video.settings.alt_description.label",
          "info": "t:sections.video.settings.alt_description.info",
          "default": "Video alt text",
          "visible_if": "{{ block.settings.media_type == 'video' }}"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.multimedia_with_text.name",
      "category": "t:sections.group.banners",
      "blocks": [
        {
          "type": "media"
        },
        {
          "type": "media"
        },
        {
          "type": "media"
        }
      ]
    }
  ]
}
{% endschema %}

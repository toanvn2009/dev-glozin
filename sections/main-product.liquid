{{ 'main-product.css' | asset_url | stylesheet_tag }}
{%- liquid
  assign theme_st = settings
  assign section_st = section.settings
  assign section_width = section_st.section_width
  assign enable_sticky_content_on_desktop = section_st.enable_sticky_content_on_desktop
  assign enable_skeleton_loading = section_st.enable_skeleton_loading
  assign desktop_media_width = section_st.desktop_media_width
  assign desktop_layout = section_st.desktop_layout
  assign image_zoom = section_st.image_zoom
  assign user_variants_image_group = false
  assign enable_sticky_add_cart_on_desktop = section_st.enable_on_desktop
  assign enable_sticky_add_cart_on_mobile = section_st.enable_on_mobile
  assign enable_frequently_bought_together = section_st.enable_frequently_bought_together
  if settings.color_swatch_trigger != blank and settings.enable_color_swatches != false
    assign option_color_name = settings.color_swatch_trigger | split: ','
  else
    assign option_color_name = 'Color'
  endif
  assign color_scheme = section_st.color_scheme
  assign products_group = product.metafields.custom.product_grouped
  assign color = false
  for option in product.options_with_values
    for itemColor in option_color_name
      if option.name == itemColor
        assign color = true
      endif
    endfor
  endfor
  if section_st.reset_spacing
    assign reset_spacing = ' remove_spacing'
  endif
  assign wishlist = pages.wishlist
  assign action_when_click_added_wishlist = theme_st.action_when_click_added_wishlist
-%}
{%- capture style -%}
  --section-pt: {{ section_st.padding_top }}; --section-pb: {{ section_st.padding_bottom }};--speed: {{ section_st.speed }}s; --font-size: {{ section_st.font_size }};
{%- endcapture -%}
<div
  id="MainProduct-{{ section.id }}"
  class="section sec__featured-product product__item-js {% if section_st.padding_top < 30 %} pt-min{% endif %}{% if section_st.padding_bottom < 30 %} pb-min{% endif %} color-{{ color_scheme }} gradient{{ reset_spacing }}"
  data-section="{{ section.id }}"
  data-color-trigger="{{ settings.color_swatch_trigger }}"
  data-desktop-layout="{{ desktop_layout }}"
  data-mobile-layout="{{ section_st.mobile_options }}"
  data-zoom="{{ image_zoom }}"
  style="{{ style | strip | strip_newlines }}"
  data-update-url="true"
>
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
  {%- assign first_3_d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3_d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id="ModelViewerStyle"
      rel="stylesheet"
      href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
      media="print"
      onload="this.media='all'"
    >
    <link
      id="ModelViewerOverride"
      rel="stylesheet"
      href="{{ 'component-model-viewer-ui.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
  {% endif %}
  {%- if image_zoom == 'external_zoom' or image_zoom == 'inner_zoom_circle' or image_zoom == 'inner_zoom_square' -%}
    {{ 'photoswipe.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'drift.js' | asset_url }}" defer="defer"></script>
    {{ 'drift-basic.min.css' | asset_url | stylesheet_tag }}
  {% endif %}
  {% if image_zoom != 'no_zoom' %}
    {{ 'photoswipe.css' | asset_url | stylesheet_tag }}
  {% endif %}
  <script src="{{ 'photoswipe-init.js' | asset_url }}" defer="defer" type="module"></script>
  {% if enable_skeleton_loading == true %}
    {{ 'skeleton.css' | asset_url | stylesheet_tag }}
    <skeleton-page class="{{ section_width }} skeleton  block">
  {% else %}
    <div class="{{ section_width }}">
  {% endif %}
  <div
    class="flex flex-cols gap flex-wrap main-product"
    style="--col-gap: 30px;--col-width: {{ desktop_media_width }}%"
  >
    {%- if product.media.size > 0 -%}
      <div class="product-detail__media col-md-w-custom w-full ">
        {% comment %} logic check ratio of image{% endcomment %}
        {%- liquid
          assign default_position = 0
          unless product.has_only_default_variant
            assign default_position = product.selected_or_first_available_variant.featured_image.position | minus: 1
          endunless
        -%}
        {% liquid
          assign position = 1
          for opt in product.options_with_values
            for color_trigger_name in option_color_name
              if opt.name == color_trigger_name
                assign position = opt.position
              endif
            endfor
          endfor
          assign default_color_option = ''
          if position == 1
            assign default_color_option = product.selected_or_first_available_variant.option1
          elsif position == 2
            assign default_color_option = product.selected_or_first_available_variant.option2
          elsif position == 3
            assign default_color_option = product.selected_or_first_available_variant.option3
          endif
          assign media = product.media
          if product.metafields.custom.use_variants_image_group != blank and product.metafields.custom.use_variants_image_group
            assign user_variants_image_group = true
            assign alt_tags = ''
            assign first = true
            for image in product.media
              if image.alt != blank
                assign exclude_image = false
                for option in product.options_with_values
                  for value in option.values
                    if image.alt == value
                      assign exclude_image = true
                    endif
                  endfor
                endfor
                if exclude_image == false
                  if first
                    assign alt_tags = image.alt
                    assign first = false
                  else
                    assign alt_tags = alt_tags | append: ', ' | append: image.alt
                  endif
                endif
              endif
            endfor
            assign variant_media = product.media | where: 'alt', default_color_option
            assign alt_tags_list = alt_tags | split: ', '
            assign other_media = ''
            assign added_alts = ''
            for image in product.media
              for alt_tag in alt_tags_list
                if image.alt == alt_tag
                  if added_alts contains alt_tag
                  else
                    assign other_media = other_media | append: image.alt | append: ','
                    assign added_alts = added_alts | append: alt_tag | append: ','
                  endif
                endif
              endfor
            endfor
            assign combined_media = variant_media
            assign other_media_array = other_media | split: ','
            for alt_tag in other_media_array
              assign media_to_add = product.media | where: 'alt', alt_tag
              assign combined_media = combined_media | concat: media_to_add
            endfor
            assign media = combined_media
          endif
          if media.size == 0
            assign media = product.media
          endif
        %}
        {% render 'media-gallery',
          images: media,
          section_st: section_st,
          theme_st: theme_st,
          product: product,
          section: section,
          position_index: default_position,
          desktop_layout: desktop_layout
        %}
        {% if wishlist == empty %}
          {% assign action_when_click_added_wishlist = 'remove' %}
        {% endif %}
        <button-wishlist
          tabindex="0"
          class="product-item__button pointer hidden-md product-item__button-wishlist tooltip relative btn-hover transition btn-hover transition bg-white rounded-50 border w-50 h-50 inline-flex content-center skeleton-loading"
          data-product-id="{{ product.id }}"
          data-action="{{ action_when_click_added_wishlist }}"
          data-tooltip-remove="{{ 'products.product.actions.wishlist.remove' | t }}"
          data-tooltip-add="{{ 'products.product.actions.wishlist.add' | t }}"
          data-tooltip-redirect="{{ 'products.product.actions.wishlist.redirect' | t }}"
        >
          <svg width="14" height="13" fill="none">
            <use href="#icon-wishlist" />
          </svg>
          <span class="tooltip-content invisible rounded-3 absolute pointer-none">
            {{- 'products.product.actions.wishlist.add' | t -}}
          </span>
        </button-wishlist>
      </div>
    {% endif %}
    {% comment %} Product infomration {% endcomment %}
    <motion-element
      {% if enable_skeleton_loading == true %}
        hold
      {% endif %}
      class="product-detail__information col-md-remaining w-full {% if enable_skeleton_loading != true %} opacity-0 {% endif %}"
      data-motion="fade-up-sm"
    >
      {% if enable_sticky_content_on_desktop %}<div class="sticky top-30">{% endif %}
      {%- assign product_form_id = 'product-form-' | append: section.id -%}
      {% if section.settings.image_zoom == 'external_zoom' %}
        <div class="zoom-external-area"></div>
      {% endif %}
      {% content_for 'blocks' %}
      {% if enable_sticky_content_on_desktop %}</div>{% endif %}
    </motion-element>
  </div>
  {% assign products_bought_together = product.metafields.custom.bought_together | split: ',' | uniq %}
  {% if enable_frequently_bought_together and products_bought_together.size > 0 %}
    <product-bought-together class="block mt-40" id="product-bought-together">
      <script type="application/json" class="productBoughTogether">
        [{{ product.id }},{%- for item in products_bought_together -%}{{ item | split: 'Product/' | last | split: '"' | first }}{%- unless forloop.last -%},{%- endunless forloop.last -%}{%- endfor -%}]
      </script>
    </product-bought-together>
  {% endif %}

  {% comment %} Not done {% endcomment %}
  {% if enable_sticky_add_cart_on_desktop == true or enable_sticky_add_cart_on_mobile == true %}
    {%- assign product_form_id = 'sticky-addcart-form-' | append: section.id -%}
    <sticky-add-cart class="fixed z-10 inset-x-0 bottom-0 py-15 shadow color-default transition-popup invisible {% if enable_sticky_add_cart_on_desktop == true %}sticky_desktop--show{% else %} hidden-md{% endif %}{% if enable_sticky_add_cart_on_mobile == true %} sticky_mobile--show{% else %} hidden{% endif %}">
      <div class="{{ section_width }}">
        <div class="flex gap-15 justify-between align-center">
          {% render 'product-item',
            card_product: product,
            section_id: section.id,
            template_enable_action: false,
            template_enable_product_vendor: false,
            template_enable_rate: true,
            template_enable_product_short_description: false,
            template_enable_color_swatches: false,
            type: 'sticky',
            class: 'hidden block-md',
            section_st: section_st
          %}
          <div class="sticky__item-info flex gap-10 w-full w-md-unset">
            <div class="product-detail__variant-picker text-size heading-color w-full">
              {% if user_variants_image_group %}
                {%- render 'color-swatches', product: product, type: 'sticky_group' -%}
              {% else %}
                {%- render 'color-swatches', product: product, type: 'sticky' -%}
              {% endif %}
            </div>
            <div class="product-detail__buy-buttons w-full">
              {%- render 'buy-buttons',
                product: product,
                product_form_id: product_form_id,
                section_id: section.id,
                show_wishlist: false,
                show_compare: false,
                formClass: 'feature-product-form',
                type: 'sticky'
              -%}
            </div>
          </div>
        </div>
      </div>
    </sticky-add-cart>
  {% endif %}
  {% unless product == empty %}
    <script
      type="application/json"
      data-product-json
      class="productJson"
    >
      {{ product | json }}
    </script>
  {% endunless %}
  {%- unless product.has_only_default_variant -%}
    <script type="application/json" class="productVariantsQty">
      [
        {%- for variant in product.variants -%}
          {%- assign op = variant.option1 | replace: '"', '\"' -%}
          {%- liquid
              assign id = '"id":' | append: variant.id
              assign option = '"option":"' | append: op | append: '"'
              assign quantity = '"qty":' | append: variant.inventory_quantity
              assign available = '"available":' | append: variant.available
              assign mamagement = '"mamagement":"' | append: variant.inventory_management | append: '"'
              assign incoming = '"incoming":"' | append: variant.incoming | append: '"'
              assign incoming_date = '"incoming_date":"' | append: variant.next_incoming_date | append: '"'
          -%}
          { {{ id }},{{ option }},{{ quantity }},{{ available }},{{ mamagement }},{{ incoming }},{{ incoming_date }}}
          {%- unless forloop.last -%},{%- endunless forloop.last -%}
        {%- endfor -%}
        ]
    </script>
  {%- endunless -%}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      function isIE() {
        const ua = window.navigator.userAgent;
        const msie = ua.indexOf('MSIE ');
        const trident = ua.indexOf('Trident/');

        return msie > 0 || trident > 0;
      }

      if (!isIE()) return;
      const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
      const noScriptInputWrapper = document.createElement('div');
      const variantSwitcher =
        document.querySelector('variant-radios[data-section="{{ section.id }}"]') ||
        document.querySelector('variant-selects[data-section="{{ section.id }}"]');
      noScriptInputWrapper.innerHTML = document.querySelector(
        '.product-form__noscript-wrapper-{{ section.id }} mt-15 d-block'
      ).textContent;
      variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

      document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function (event) {
        hiddenInput.value = event.currentTarget.value;
      });
    });
  </script>
  {%- if first_3_d_model -%}
    <script type="application/json" id="ProductJSON-{{ product.id }}">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>
  {% endif %}
  {%- liquid
    if product.selected_or_first_available_variant.featured_media
      assign seo_media = product.selected_or_first_available_variant.featured_media
    else
      assign seo_media = product.featured_media
    endif
  -%}

  <script type="application/ld+json">
    {
      "@context": "http://schema.org/",
      "@type": "Product",
      "name": {{ product.title | json }},
      "url": {{ request.origin | append: product.url | json }},
      {% if seo_media -%}
        "image": [
          {{ seo_media | image_url: width: 1920 | prepend: "https:" | json }}
        ],
      {%- endif %}
      "description": {{ product.description | strip_html | json }},
      {% if product.selected_or_first_available_variant.sku != blank -%}
        "sku": {{ product.selected_or_first_available_variant.sku | json }},
      {%- endif %}
      "brand": {
        "@type": "Brand",
        "name": {{ product.vendor | json }}
      },
      "offers": [
        {%- for variant in product.variants -%}
          {
            "@type" : "Offer",
            {%- if variant.sku != blank -%}
              "sku": {{ variant.sku | json }},
            {% endif %}
            {%- if variant.barcode.size == 12 -%}
              "gtin12": {{ variant.barcode }},
            {% endif %}
            {%- if variant.barcode.size == 13 -%}
              "gtin13": {{ variant.barcode }},
            {% endif %}
            {%- if variant.barcode.size == 14 -%}
              "gtin14": {{ variant.barcode }},
            {% endif %}
            "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
            "price" : {{ variant.price | divided_by: 100.00 | json }},
            "priceCurrency" : {{ cart.currency.iso_code | json }},
            "url" : {{ request.origin | append: variant.url | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      ]
    }
  </script>
  {% if enable_skeleton_loading == true %}
    </skeleton-page>
  {% else %}
    </div>
  {% endif %}
</div>
{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section main-product-section",
  "settings": [
    {
      "type": "select",
      "id": "section_width",
      "label": "t:sections.all.section_width.label",
      "default": "container",
      "options": [
        {
          "value": "container",
          "label": "t:sections.all.section_width.container.label"
        },
        {
          "value": "fluid_container",
          "label": "t:sections.all.section_width.fluid_container.label"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.section_width.stretch_width.label"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.section_width.full_width.label"
        }
      ]
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_content_on_desktop",
      "default": true,
      "label": "t:sections.main-product.settings.all.enable_sticky_content_on_desktop"
    },
    {
      "type": "checkbox",
      "id": "enable_skeleton_loading",
      "default": true,
      "label": "t:sections.main-product.settings.all.enable_skeleton_loading"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.media.header",
      "info": "t:sections.main-product.settings.media.paragraph"
    },
    {
      "type": "range",
      "id": "desktop_media_width",
      "min": 40,
      "max": 60,
      "step": 1,
      "unit": "%",
      "label": "t:sections.main-product.settings.media.desktop_media_width",
      "default": 40
    },
    {
      "type": "select",
      "id": "desktop_layout",
      "options": [
        {
          "value": "thumbnail_left",
          "label": "t:sections.main-product.settings.media.desktop_layout.thumbnail_left"
        },
        {
          "value": "thumbnail_bottom",
          "label": "t:sections.main-product.settings.media.desktop_layout.thumbnail_bottom"
        },
        {
          "value": "hidden_thumbnail",
          "label": "t:sections.main-product.settings.media.desktop_layout.hidden_thumbnail"
        },
        {
          "value": "grid_1_column",
          "label": "t:sections.main-product.settings.media.desktop_layout.grid_1_column"
        },
        {
          "value": "grid_2_column",
          "label": "t:sections.main-product.settings.media.desktop_layout.grid_2_column"
        },
        {
          "value": "stack",
          "label": "t:sections.main-product.settings.media.desktop_layout.stack"
        }
      ],
      "default": "thumbnail_bottom",
      "label": "t:sections.main-product.settings.media.desktop_layout.label"
    },
    {
      "type": "select",
      "id": "image_zoom",
      "options": [
        {
          "value": "no_zoom",
          "label": "t:sections.main-product.settings.media.image_zoom.no_zoom"
        },
        {
          "value": "open_lightbox",
          "label": "t:sections.main-product.settings.media.image_zoom.open_lightbox"
        },
        {
          "value": "inner_zoom_circle",
          "label": "t:sections.main-product.settings.media.image_zoom.inner_zoom_circle"
        },
        {
          "value": "inner_zoom_square",
          "label": "t:sections.main-product.settings.media.image_zoom.inner_zoom_square"
        },
        {
          "value": "external_zoom",
          "label": "t:sections.main-product.settings.media.image_zoom.external_zoom"
        }
      ],
      "default": "no_zoom",
      "label": "t:sections.main-product.settings.media.image_zoom.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": true,
      "label": "t:sections.main-product.settings.media.enable_video_looping"
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "default": true,
      "label": "t:sections.main-product.settings.media.enable_video_autoplay.label",
      "info": "t:sections.main-product.settings.media.enable_video_autoplay.info"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.frequently_bought_together.header"
    },
    {
      "type": "checkbox",
      "id": "enable_frequently_bought_together",
      "default": true,
      "label": "t:sections.main-product.settings.frequently_bought_together.enable"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.sticky_add_to_cart.header"
    },
    {
      "type": "checkbox",
      "id": "enable_on_desktop",
      "default": true,
      "label": "t:sections.main-product.settings.sticky_add_to_cart.enable_on_desktop"
    },
    {
      "type": "checkbox",
      "id": "enable_on_mobile",
      "default": true,
      "label": "t:sections.main-product.settings.sticky_add_to_cart.enable_on_mobile"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.mobile_options.label"
    },
    {
      "type": "select",
      "id": "mobile_options",
      "options": [
        {
          "value": "show_thumbnails",
          "label": "t:sections.main-product.settings.mobile_options.show_thumbnails"
        },
        {
          "value": "hidden_thumbnail",
          "label": "t:sections.main-product.settings.mobile_options.hidden_thumbnail"
        }
      ],
      "default": "show_thumbnails",
      "label": "t:sections.main-product.settings.mobile_options.label",
      "info": "t:sections.main-product.settings.mobile_options.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.section_padding.label"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "t:sections.all.section_padding.top.label",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "t:sections.all.section_padding.bottom.label",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "checkbox",
      "id": "reset_spacing",
      "label": "t:sections.all.section_padding.reset_spacing.label",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "_product-title"
    },
    {
      "type": "_product-price"
    },
    {
      "type": "_product-addons"
    },
    {
      "type": "_product-meta"
    },
    {
      "type": "_product-grouped"
    },
    {
      "type": "_product-complementary-products"
    },
    {
      "type": "_product-variant-picker"
    },
    {
      "type": "_product-collapsible-row"
    },
    {
      "type": "_product-countdown-timer"
    },
    {
      "type": "_product-live-view"
    },
    {
      "type": "_product-modal-size"
    },
    {
      "type": "_product-more-colors"
    },
    {
      "type": "_product-custom-field"
    },
    {
      "type": "_product-delivery-return"
    },
    {
      "type": "_product-pickup-availability"
    },
    {
      "type": "_product-review-sold"
    },
    {
      "type": "_product-short-description"
    },
    {
      "type": "_product-trust-badge"
    },
    {
      "type": "_product-buy-buttons"
    },
    {
      "type": "_product-badges"
    },
    {
      "type": "custom-liquid"
    },
    {
      "type": "_product-stock-countdown"
    }
  ]
}
{% endschema %}
